module TemplateBuilder::App
  class FileManager 
    
    Error = Class.new(StandardError)

    attr_accessor :file, :verbose, :file_name
    alias :verbose? :verbose

    def initialize( opts = {} )
      self.file_name = opts[:file]
      self.verbose = opts[:verbose]
            
      self.file = File.new(self.file_name,  "w+")
              
      @out = opts[:stdout] || $stdout
      @err = opts[:stderr] || $stderr
    end
    
    def start_file(config_file)
      write "#   This template was generated by template_builder, the amazing and awesome Rails
#     application builder.
#
initializer 'generators.rb', <<-RUBY
  Rails.application.config.generators do |g|
end
RUBY"

      template = "template = {"
      config_file.each{ |key, value| template += "'"+key.to_s+"'=>'"+value.to_s+"',"}
      template += "}"
write template
      write"recipes = template.values.flatten

@after = []
def after_bundler(&block); @after << block; end"
    end
    
    def end_file(name, command)
      write "
# >-----------------------------[ Run Bundler ]-------------------------------<

say 'Running Bundler install. This will take a while.'
run 'bundle install'
say_wizard 'Running after Bundler callbacks.'
@after.each{|b| b.call}

# >---------------------------[ Install Command ]-----------------------------<
#  rails new APP_NAME -m "+name+" "+command.to_s+"
# >---------------------------------------------------------------------------<"
    end
    
    def write(content)
      self.file.write content+"\n"
    end
    
    def write_gem(gem)
      write "gem "+gem
    end
    
    def write_action(action)
      write "after_bundler do\n"
      write action.to_s
      write "end"
    end
    
    def write_framework_introduction(name)
      write "
#  ---------------------------------------------------------------------------
# >----------------------------[ "+name+"]------------------------------<"
    end
    
  end
end